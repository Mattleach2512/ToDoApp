# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '827146b4-9567-4c1e-9f3b-e366d8ab2c78'
  imageRepository: 'mattleachtodoapp'
  containerRegistry: 'demoacr666.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/ToDoApp/ToDoApp/Dockerfile'
  deploymentFile: 'Yaml/deploy.web.yaml'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build the container image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        tags: |
          $(tag)
    - script: |
        sudo docker tag $(imageRepository):$(tag) $(containerRegistry)/$(imageRepository):$(tag)
      displayName: 'Tag container image before push'
    - task: Docker@2
      displayName: Push the image to the container registry
      inputs:
        command: push
        repository: $(imageRepository)
        Dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to K8S
  jobs:
  - job: Deploy
    displayName: Deploy to K8S
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: replacetokens@3
      inputs:
        rootDirectory: '$(Build.SourcesDirectory)/ToDoApp/ToDoApp'
        targetFiles: '$(deploymentFile)'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        useLegacyPattern: false
        enableTelemetry: true
      

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'aks-test-uks-66'
        namespace: 'default'
        command: 'apply'
        useConfigurationFile: true
        configuration: 'dsfsd'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        azureSubscriptionEndpointForSecrets: 'Visual Studio Enterprise â€“ MPN(d01e22a2-bdb3-4c7a-92a2-613cc0dc1f30)'
        azureContainerRegistry: 'demoacr666.azurecr.io'
          
